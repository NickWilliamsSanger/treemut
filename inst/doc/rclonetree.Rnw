\documentclass{article}
\usepackage{graphicx}
%\usepackage{algorithm2e}
\begin{document}

\SweaveOpts{concordance=TRUE,echo=T,pdf=T,eps=F,eval=T,keep.source=T}

%\SweaveOpts{concordance=TRUE}
\begin{center}
\Large
{\tt rclonetree} Package Vignette
\normalsize
\end{center}

<<echo=false>>=
  options(continue="  ")
options(digits=4)
set.seed(323123)
require("rclonetree")
require("xtable")
@
\section{Introduction}
This package is designed to enable users to map clonal somatic mutations to a specified tree.  The
method requires the mutant read counts and depth for each sample/loci in the form of matrices.
\section{Simulated data}
Generate tree
\begin{small}
<<echo=TRUE,eval=TRUE>>=
 tree=generate_random_tree(50)
@
\end{small}
\begin{small}
<<label=splot,include=FALSE,results=hide>>=
plot(tree)
@
\end{small}
\begin{figure}[htbp]
\begin{center}
<<fig=TRUE,echo=FALSE,width=12,height=12>>=
<<splot>>
@
\end{center}
\caption{Randomly generated tree}
\end{figure}
Note that the tree includes an outgroup "zeros".  This can be added to a tree obtained from other sources by
<<echo=TRUE,eval=FALSE>>=
 tree=bind.tree(tree,read.tree(text="(zeros:0);"))
@

Now we create a summary object that summarises each branch of the tree as a genotype.  This just requires the APE tree as input:
<<echo=true>>=
  df=reconstruct_genotype_summary(tree)
cat(df$samples,"\n")
head(df$df[, 1:3])
@



Where
\begin{enumerate}
\item "profile" column indicates the genotype (in the same order as df sample)
\item "edge\_length" gives the branch edge length i.e. number of mutations assigned to branch (perfectly known here)
\item "mut\_count"  Indicates the number of mutant samples implied by the genotype (i.e. the number of 1s in "profile")
\end{enumerate}

We now simulate some data based on the tree:

<<echo=TRUE,eval=TRUE>>=
 simdat=simulate_reads_from_tree(df,12)
head(simdat$mtr)
head(simdat$depth)
print(simdat$p.error)
@
We now have required information: mutant read matrix "mtr", depth matrix "depth", genotype summary "df",and base calling error rate "p.error" - note how we've set the last entry corresponding to "zeros" outgroup very low.

<<echo=TRUE,eval=TRUE>>=
 res=assign_to_tree(tree,simdat$mtr,simdat$depth,error_rate=simdat$p.error)
@

<<label=splot2,include=FALSE,results=hide>>=
tree_estimated=res$tree
par(mfcol=c(1,2))
plot(ladderize(tree,right=TRUE),cex=0.5)
plot(ladderize(tree_estimated,right=TRUE),cex=0.5)
@

\begin{figure}[htbp]
\begin{center}
<<fig=TRUE,echo=FALSE,width=12,height=12>>=
<<splot2>>
@
\end{center}
\caption{Tree comparison}
\end{figure}
<<label=splot3,include=FALSE,results=hide>>=
sim=list(edge_length_orig=df$df$edge_length,
         edge_length_inferred=res$df$df$edge_length,
         expected_edge_length_inferred=res$df$df$expected_edge_length,
         edge_idx_orig=simdat$edge,
         edge_idx_ml=res$summary$edge_ml)
plot_sim_result(sim)
@

\begin{figure}[htbp]
\begin{center}
<<fig=TRUE,echo=FALSE,width=12,height=12>>=
<<splot3>>
@
\end{center}
\caption{Edge length comparison}
\end{figure}



\end{document}